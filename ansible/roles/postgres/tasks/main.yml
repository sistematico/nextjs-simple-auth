---
- name: Instalar dependências necessárias
  apt:
    name:
      - curl
      - ca-certificates
      - gnupg
    state: present
    update_cache: yes

# - name: Adicionar repositório do PostgreSQL
#   apt_key:
#     url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
#     state: present

# - name: Configurar repositório do PostgreSQL 16
#   apt_repository:
#     repo: "deb [arch=amd64] http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
#     state: present
#     filename: postgresql

# - name: Instalar PostgreSQL 16
#   apt:
#     name:
#       - postgresql-16
#       - postgresql-client-16
#       - python3-psycopg2  # Biblioteca para módulos do Ansible
#     state: present
#     update_cache: yes
#   notify: reiniciar_postgresql

- name: Garantir que o PostgreSQL está em execução
  service:
    name: postgresql
    state: started
    enabled: yes

- name: >-
    Habilitar o usuario nginx para rodar:
    /bin/bash scripts/db/drop.sh e,
    /bin/bash scripts/db/create.sh,
    sem necessidade de senha
  community.general.sudoers:
    name: postgres-lucasbrum
    user: nginx
    commands:
      - /bin/bash scripts/db/drop.sh
      - /bin/bash scripts/db/create.sh
    nopassword: true

- name: Criar usuário 'lucasbrum' no PostgreSQL
  community.postgresql.postgresql_user:
    name: lucasbrum
    password: "{{ db_password }}"
    role_attr_flags: CREATEDB,LOGIN
    state: present
    login_user: postgres
    login_host: localhost
    login_password: "{{ postgres_password }}"
  become: yes
  become_user: postgres

- name: Criar banco de dados 'agrocomm' com dono
  community.postgresql.postgresql_db:
    name: agrocomm
    owner: agrocomm
    state: present
    login_user: postgres
    login_host: localhost
    login_password: "{{ postgres_password }}"
  become: yes
  become_user: postgres

# - name: Criar banco de dados 'agrocomm'
#   community.postgresql.postgresql_db:
#     name: agrocomm
#     state: present
#     login_user: postgres
#     login_host: localhost
#   become: yes
#   become_user: postgres

- name: reiniciar_postgresql
  service:
    name: postgresql
    state: restarted
    enabled: yes